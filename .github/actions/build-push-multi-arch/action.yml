name: 'Build and Push (Multi-Arch)'
description: 'Build a Docker image for amd64 and/or arm64 and push it to GitHub Container Registry'
author: aica-technology
branding:
  icon: file-plus
  color: gray-dark
inputs:
  architecture:
    description: 'The desired architecture [`amd64` or `amd64 & arm64`]'
    required: true
    default: 'amd64 & arm64'
  path:
    description: 'Path to the directory that specifies the Docker build context'
    required: true
    default: '.'
  filename:
    description: 'The full name of the Dockerfile with respect to the build context'
    required: true
    default: 'Dockerfile'
  image_name:
    description: 'The name of the image (for example "aica-technology/image-name")'
    required: true
  image_tag:
    description: 'The tag of the image (for example "latest")'
    required: true
  build_flags:
    description: 'Any build flags that should be forwarded to the build process as an array'
    required: false
    default: ()
  secret:
    description: 'GitHub Container Registry secret'
    required: true
outputs:
  image_hash:
    description: 'The SHA of the pushed image'
    value: ${{ steps.build-push.outputs.sha }}

runs:
  using: "composite"
  steps:
    - name: Parse inputs
      run: |
        ARCH="${{ inputs.architecture }}"
        ARCH_FLAGS=()
        if [[ "${ARCH}" == "amd64" ]]; then
          BUILD_FLAGS+=(--platform=linux/amd64)
        elif [[ "${ARCH}" == "amd64 & arm64" ]]; then
          BUILD_FLAGS+=(--platform=linux/arm64,linux/amd64)
        else
          echo "::error::Invalid architecture. Choose between 'amd64 & arm64' and 'amd64'."
          exit 1
        fi
        echo "ARCH_FLAGS=${ARCH_FLAGS}" >> $GITHUB_ENV
      shell: bash

    - name: Set up QEMU
      if: ${{ inputs.architecture == 'amd64 & arm64' }}
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Package Registry
      run: echo "${{ inputs.secret }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      shell: bash

    - id: build-push
      name: Build and push image
      run: |
        BUILD_FLAGS=${{ inputs.build_flags }}
        IMAGE=${{ inputs.image_name }}:${{ inputs.image_tag }}
        docker buildx build --file ${{ inputs.path }}/${{ inputs.filename }} \
          ${ARCH_FLAGS[@]} ${BUILD_FLAGS[@]} \
          --push --tag ${IMAGE} \
          ${{ inputs.docker_path }}
        SHA=$(docker buildx imagetools inspect ${IMAGE} | grep Digest)
        echo "sha=${SHA##*sha256:}" >> $GITHUB_OUTPUT
      shell: bash
